// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: v1/answerer.proto

package answerer

import (
	context "context"
	grpc "google.golang.org/grpc"
	grpc_channelz_v1 "google.golang.org/grpc/channelz/grpc_channelz_v1"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KubernetesKind int32

const (
	KubernetesKind_UNSPECIFIED KubernetesKind = 0
	KubernetesKind_POD         KubernetesKind = 1
	KubernetesKind_SERVICE     KubernetesKind = 2
	KubernetesKind_DEPLOYMENT  KubernetesKind = 3
)

// Enum value maps for KubernetesKind.
var (
	KubernetesKind_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "POD",
		2: "SERVICE",
		3: "DEPLOYMENT",
	}
	KubernetesKind_value = map[string]int32{
		"UNSPECIFIED": 0,
		"POD":         1,
		"SERVICE":     2,
		"DEPLOYMENT":  3,
	}
)

func (x KubernetesKind) Enum() *KubernetesKind {
	p := new(KubernetesKind)
	*p = x
	return p
}

func (x KubernetesKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KubernetesKind) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_answerer_proto_enumTypes[0].Descriptor()
}

func (KubernetesKind) Type() protoreflect.EnumType {
	return &file_v1_answerer_proto_enumTypes[0]
}

func (x KubernetesKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KubernetesKind.Descriptor instead.
func (KubernetesKind) EnumDescriptor() ([]byte, []int) {
	return file_v1_answerer_proto_rawDescGZIP(), []int{0}
}

type GetChannelzRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace string         `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Kind      KubernetesKind `protobuf:"varint,3,opt,name=kind,proto3,enum=labolith.answerer.v1.KubernetesKind" json:"kind,omitempty"`
	Port      uint32         `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *GetChannelzRequest) Reset() {
	*x = GetChannelzRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_answerer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelzRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelzRequest) ProtoMessage() {}

func (x *GetChannelzRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_answerer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelzRequest.ProtoReflect.Descriptor instead.
func (*GetChannelzRequest) Descriptor() ([]byte, []int) {
	return file_v1_answerer_proto_rawDescGZIP(), []int{0}
}

func (x *GetChannelzRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetChannelzRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetChannelzRequest) GetKind() KubernetesKind {
	if x != nil {
		return x.Kind
	}
	return KubernetesKind_UNSPECIFIED
}

func (x *GetChannelzRequest) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type GetChannelzResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channelz map[string]*Channelz `protobuf:"bytes,1,rep,name=channelz,proto3" json:"channelz,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetChannelzResponse) Reset() {
	*x = GetChannelzResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_answerer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelzResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelzResponse) ProtoMessage() {}

func (x *GetChannelzResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_answerer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelzResponse.ProtoReflect.Descriptor instead.
func (*GetChannelzResponse) Descriptor() ([]byte, []int) {
	return file_v1_answerer_proto_rawDescGZIP(), []int{1}
}

func (x *GetChannelzResponse) GetChannelz() map[string]*Channelz {
	if x != nil {
		return x.Channelz
	}
	return nil
}

type Channelz struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channels []*Channel `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
	Servers  []*Server  `protobuf:"bytes,2,rep,name=servers,proto3" json:"servers,omitempty"`
}

func (x *Channelz) Reset() {
	*x = Channelz{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_answerer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Channelz) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Channelz) ProtoMessage() {}

func (x *Channelz) ProtoReflect() protoreflect.Message {
	mi := &file_v1_answerer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Channelz.ProtoReflect.Descriptor instead.
func (*Channelz) Descriptor() ([]byte, []int) {
	return file_v1_answerer_proto_rawDescGZIP(), []int{2}
}

func (x *Channelz) GetChannels() []*Channel {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *Channelz) GetServers() []*Server {
	if x != nil {
		return x.Servers
	}
	return nil
}

type Channel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel *grpc_channelz_v1.Channel  `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	Sockets []*grpc_channelz_v1.Socket `protobuf:"bytes,2,rep,name=sockets,proto3" json:"sockets,omitempty"`
}

func (x *Channel) Reset() {
	*x = Channel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_answerer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Channel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Channel) ProtoMessage() {}

func (x *Channel) ProtoReflect() protoreflect.Message {
	mi := &file_v1_answerer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Channel.ProtoReflect.Descriptor instead.
func (*Channel) Descriptor() ([]byte, []int) {
	return file_v1_answerer_proto_rawDescGZIP(), []int{3}
}

func (x *Channel) GetChannel() *grpc_channelz_v1.Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *Channel) GetSockets() []*grpc_channelz_v1.Socket {
	if x != nil {
		return x.Sockets
	}
	return nil
}

type Server struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server  *grpc_channelz_v1.Server   `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	Sockets []*grpc_channelz_v1.Socket `protobuf:"bytes,2,rep,name=sockets,proto3" json:"sockets,omitempty"`
}

func (x *Server) Reset() {
	*x = Server{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_answerer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_v1_answerer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_v1_answerer_proto_rawDescGZIP(), []int{4}
}

func (x *Server) GetServer() *grpc_channelz_v1.Server {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *Server) GetSockets() []*grpc_channelz_v1.Socket {
	if x != nil {
		return x.Sockets
	}
	return nil
}

var File_v1_answerer_proto protoreflect.FileDescriptor

var file_v1_answerer_proto_rawDesc = []byte{
	0x0a, 0x11, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x14, 0x6c, 0x61, 0x62, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2e, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x72, 0x70, 0x63, 0x2f,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x7a, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x7a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x94, 0x01, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x7a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x24, 0x2e, 0x6c, 0x61, 0x62, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2e, 0x61, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x65, 0x73, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x22, 0xc7, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x08, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x7a, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6c, 0x61,
	0x62, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x7a, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x7a, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x7a, 0x1a, 0x5b,
	0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x7a, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x6c, 0x61, 0x62, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2e, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x7a,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7d, 0x0a, 0x08, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x7a, 0x12, 0x39, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x61, 0x62, 0x6f,
	0x6c, 0x69, 0x74, 0x68, 0x2e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x73, 0x12, 0x36, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x61, 0x62, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2e, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x22, 0x72, 0x0a, 0x07, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x33, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x32, 0x0a, 0x07, 0x73, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x07, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x6e,
	0x0a, 0x06, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x07, 0x73, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x07, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2a, 0x47,
	0x0a, 0x0e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x4b, 0x69, 0x6e, 0x64,
	0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x4f, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x45,
	0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x45, 0x50, 0x4c, 0x4f,
	0x59, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x32, 0x6e, 0x0a, 0x08, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x65, 0x72, 0x12, 0x62, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x7a, 0x12, 0x28, 0x2e, 0x6c, 0x61, 0x62, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2e, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x7a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6c,
	0x61, 0x62, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x7a, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x31, 0x31, 0x30, 0x79, 0x2f, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x65, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_answerer_proto_rawDescOnce sync.Once
	file_v1_answerer_proto_rawDescData = file_v1_answerer_proto_rawDesc
)

func file_v1_answerer_proto_rawDescGZIP() []byte {
	file_v1_answerer_proto_rawDescOnce.Do(func() {
		file_v1_answerer_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_answerer_proto_rawDescData)
	})
	return file_v1_answerer_proto_rawDescData
}

var file_v1_answerer_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_v1_answerer_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_v1_answerer_proto_goTypes = []interface{}{
	(KubernetesKind)(0),              // 0: labolith.answerer.v1.KubernetesKind
	(*GetChannelzRequest)(nil),       // 1: labolith.answerer.v1.GetChannelzRequest
	(*GetChannelzResponse)(nil),      // 2: labolith.answerer.v1.GetChannelzResponse
	(*Channelz)(nil),                 // 3: labolith.answerer.v1.Channelz
	(*Channel)(nil),                  // 4: labolith.answerer.v1.Channel
	(*Server)(nil),                   // 5: labolith.answerer.v1.Server
	nil,                              // 6: labolith.answerer.v1.GetChannelzResponse.ChannelzEntry
	(*grpc_channelz_v1.Channel)(nil), // 7: grpc.channelz.v1.Channel
	(*grpc_channelz_v1.Socket)(nil),  // 8: grpc.channelz.v1.Socket
	(*grpc_channelz_v1.Server)(nil),  // 9: grpc.channelz.v1.Server
}
var file_v1_answerer_proto_depIdxs = []int32{
	0,  // 0: labolith.answerer.v1.GetChannelzRequest.kind:type_name -> labolith.answerer.v1.KubernetesKind
	6,  // 1: labolith.answerer.v1.GetChannelzResponse.channelz:type_name -> labolith.answerer.v1.GetChannelzResponse.ChannelzEntry
	4,  // 2: labolith.answerer.v1.Channelz.channels:type_name -> labolith.answerer.v1.Channel
	5,  // 3: labolith.answerer.v1.Channelz.servers:type_name -> labolith.answerer.v1.Server
	7,  // 4: labolith.answerer.v1.Channel.channel:type_name -> grpc.channelz.v1.Channel
	8,  // 5: labolith.answerer.v1.Channel.sockets:type_name -> grpc.channelz.v1.Socket
	9,  // 6: labolith.answerer.v1.Server.server:type_name -> grpc.channelz.v1.Server
	8,  // 7: labolith.answerer.v1.Server.sockets:type_name -> grpc.channelz.v1.Socket
	3,  // 8: labolith.answerer.v1.GetChannelzResponse.ChannelzEntry.value:type_name -> labolith.answerer.v1.Channelz
	1,  // 9: labolith.answerer.v1.Answerer.GetChannelz:input_type -> labolith.answerer.v1.GetChannelzRequest
	2,  // 10: labolith.answerer.v1.Answerer.GetChannelz:output_type -> labolith.answerer.v1.GetChannelzResponse
	10, // [10:11] is the sub-list for method output_type
	9,  // [9:10] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_v1_answerer_proto_init() }
func file_v1_answerer_proto_init() {
	if File_v1_answerer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_answerer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChannelzRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_answerer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChannelzResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_answerer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Channelz); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_answerer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Channel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_answerer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_answerer_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_answerer_proto_goTypes,
		DependencyIndexes: file_v1_answerer_proto_depIdxs,
		EnumInfos:         file_v1_answerer_proto_enumTypes,
		MessageInfos:      file_v1_answerer_proto_msgTypes,
	}.Build()
	File_v1_answerer_proto = out.File
	file_v1_answerer_proto_rawDesc = nil
	file_v1_answerer_proto_goTypes = nil
	file_v1_answerer_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AnswererClient is the client API for Answerer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AnswererClient interface {
	GetChannelz(ctx context.Context, in *GetChannelzRequest, opts ...grpc.CallOption) (*GetChannelzResponse, error)
}

type answererClient struct {
	cc grpc.ClientConnInterface
}

func NewAnswererClient(cc grpc.ClientConnInterface) AnswererClient {
	return &answererClient{cc}
}

func (c *answererClient) GetChannelz(ctx context.Context, in *GetChannelzRequest, opts ...grpc.CallOption) (*GetChannelzResponse, error) {
	out := new(GetChannelzResponse)
	err := c.cc.Invoke(ctx, "/labolith.answerer.v1.Answerer/GetChannelz", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AnswererServer is the server API for Answerer service.
type AnswererServer interface {
	GetChannelz(context.Context, *GetChannelzRequest) (*GetChannelzResponse, error)
}

// UnimplementedAnswererServer can be embedded to have forward compatible implementations.
type UnimplementedAnswererServer struct {
}

func (*UnimplementedAnswererServer) GetChannelz(context.Context, *GetChannelzRequest) (*GetChannelzResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChannelz not implemented")
}

func RegisterAnswererServer(s *grpc.Server, srv AnswererServer) {
	s.RegisterService(&_Answerer_serviceDesc, srv)
}

func _Answerer_GetChannelz_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChannelzRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnswererServer).GetChannelz(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/labolith.answerer.v1.Answerer/GetChannelz",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnswererServer).GetChannelz(ctx, req.(*GetChannelzRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Answerer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "labolith.answerer.v1.Answerer",
	HandlerType: (*AnswererServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetChannelz",
			Handler:    _Answerer_GetChannelz_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "v1/answerer.proto",
}
